---
import Image from "astro/components/Image.astro";
import { Code } from "astro:components";
import Layout from "../layouts/Layout.astro";
import cover from "../images/book-cover.jpg";
import Readers from "../components/Readers.astro";

const rustCodeExample = `async fn function_handler(
    event: LambdaEvent<EventBridgeEvent<Value>>,
) -> Result<(), Error> {
    let start = Instant::now();
    let resp = reqwest::get("https://loige.co").await;
    let duration = start.elapsed();

    let timestamp = event
        .payload
        .time
        .unwrap_or_else(chrono::Utc::now)
        .format("%+")
        .to_string();
    
    let mut item = HashMap::new();
    item.insert(
        "Id".to_string(),
        AttributeValue::S(format!("{}#{}", "https://loige.co", timestamp)),
    );
    item.insert("Timestamp".to_string(), AttributeValue::S(timestamp));

    let success = match resp {
        Ok(resp) => {
            let status = resp.status().as_u16();
            item.insert("Status".to_string(), AttributeValue::N(status.to_string()));
            item.insert(
                "Duration".to_string(),
                AttributeValue::N(duration.as_millis().to_string()),
            );
            resp.status().is_success()
        }
        Err(e) => {
            item.insert("Error".to_string(), AttributeValue::S(e.to_string()));
            false
        }
    };
    item.insert("Success".to_string(), AttributeValue::Bool(success));

    let insert_result = dynamodb_client
        .put_item()
        .table_name("my_dynamo_table")
        .set_item(Some(item))
        .send()
        .await?;

    tracing::info!("Insert result: {:?}", insert_result);

    Ok(())
}`;
---

<Layout title="Crafting Lambda Functions in Rust - Ebook">
  <div class="relative flex flex-col min-h-screen">
    <div
      class="absolute -left-[15%] top-0 -z-10 m-auto h-[610px] w-[610px] rounded-full bg-[#FD8001] opacity-50 blur-[100px]"
    >
    </div>
    <header class="py-4 md:py-6 z-20">
      <div class="container flex items-center justify-end px-4 md:px-6">
        <a
          class="sr-only flex items-center space-x-2 text-2xl font-bold"
          href="/"
        >
          Crafting Lambda Functions in Rust
        </a>
        <nav class="hidden space-x-4 text-base font-medium md:flex">
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#features"
          >
            Features
          </a>
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#author"
          >
            Author
          </a>
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#testimonials"
          >
            Testimonials
          </a>
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#faq"
          >
            FAQ
          </a>
        </nav>
      </div>
    </header>

    <main class="flex-1">
      <section class="py-12 lg:py-24">
        <div
          class="container flex flex-col items-center gap-10 px-4 md:px-6 lg:gap-16 lg:flex-row"
        >
          <Image
            src={cover}
            width="400"
            height="600"
            alt="Crafting Lambda Functions in Rust: Book Cover"
            quality={90}
            decoding="sync"
            loading="eager"
            class="aspect-[4/6] overflow-hidden rounded-r-md object-cover object-center shadow-lg shadow-black/50"
          />
          <div class="space-y-6 text-center lg:text-left">
            <div class="space-y-2">
              <h1
                class="text-4xl font-bold sm:text-5xl md:text-6xl lg:text-7xl/line-tight bg-gradient-to-tr from-foreground to-[#A60B2C] inline-block text-transparent bg-clip-text"
              >
                Crafting Lambda Functions in Rust
              </h1>
            </div>
            <p
              class="max-w-[700px] text-foreground/80 md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed dark:text-gray-400"
            >
              A practical guide on how to build <strong>efficient</strong>, <strong
                >sustainable</strong
              >, <strong>cost-effective</strong> serverless AWS solutions with the
              Rust programming language.
            </p>

            <div class="flex flex-col gap-2 md:max-w-80">
              <a
                href="/buy"
                class="text-center font-semibold rounded-lg bg-primary/80 text-primary-foreground/90 hover:bg-primary hover:text-primary-foreground py-4 px-8 shadow-md hover:shadow-lg transition-colors focus-visible:ring-1 focus-visible:ring-ring"
                >Buy now! <strike class="font-normal stroke-slate-500"
                  >39.90</strike
                > 14.90 $</a
              >
              <p
                class="text-sm text-center text-muted-foreground font-semibold"
              >
                <a
                  href="#early-access"
                  class="border-b border-border-foreground border-dotted pb-1"
                  >Get the <span class="uppercase font-bold"
                    >Early-Access<sup class="sup text-[.5rem] -top-2 relative"
                      >TM</sup
                    ></span
                  > package!</a
                >
              </p>
            </div>

            <div>
              <Readers total={100} />
            </div>
          </div>
        </div>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <h2>Social Proof</h2>
        <blockquote>
          <p>
            As someone with a strong JavaScript background, I did not expect
            this book to make me so productive at writing my first Lambda
            functions using Rust. It definitely accelerated my path to
            production and the gains are insane!
          </p>
          <p>- Super Mario</p>
        </blockquote>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <p>
          Looking to build efficient and sustainable AWS solutions that won't
          break the bank? Wondering how the Rust programming language could help
          you achieve that? You've come to the right place! Check out our
          practical guide for all the tips and tricks you need to know to create
          cost-effective serverless solutions using AWS and Rust.
        </p>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <div
          class="bg-card/50 text-card-foreground border border-border glow rounded-md p-8 backdrop-blur-sm mr-16"
        >
          <div class="w-7/12 absolute -right-8 top-4 shadow-md">
            <div
              class="bg-gray-200 text-center text-xs text-gray-700 font-semibold rounded-t-sm py-1 shadow-inner border border-gray-300"
            >
              <span class="drop-shadow-sm">handler.rs</span>
            </div>
            <div class="bg-black/75 rounded-b-sm shadow-inner">
              <Code
                class="p-2 text-xs rounded-b-sm max-h-44"
                code={rustCodeExample}
                lang="rust"
                theme="aurora-x"
              />
            </div>
          </div>
          <div class="w-5/12">
            <div class="flex flex-col space-y-2">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="w-12 h-12 text-accent"
              >
                <polyline points="4 17 10 11 4 5"></polyline>
                <line x1="12" x2="20" y1="19" y2="19"></line>
              </svg>
              <h2 class="text-lg font-bold">Real hands-on code examples</h2>
              <p>
                Learn by doing with practical and realistic code examples that
                demonstrate how to write efficient and sustainable Lambda
                functions in Rust.
              </p>
            </div>
          </div>
        </div>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <div
          class="bg-card/50 text-card-foreground border border-border glow rounded-md p-8 backdrop-blur-sm ml-16"
        >
          test
        </div>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <div
          class="bg-card/50 text-card-foreground border border-border glow rounded-md p-8 backdrop-blur-sm mr-16"
        >
          test
        </div>
      </section>

      <section id="features" class="my-12 px-4 md:px-6 text-foreground">
        <div
          class="grid items-start gap-6 md:gap-12 lg:grid-cols-3 lg:gap-10 xl:grid-cols-3"
        >
          <div class="flex flex-col space-y-2">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="w-12 h-12 text-accent"
            >
              <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
              <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
            </svg>
            <h3 class="text-lg font-bold">Comprehensive Guide</h3>
            <p class="text-sm">
              Learn the ins and outs of writing Lambda functions in Rust with
              clear examples and explanations.
            </p>
          </div>
          <div class="flex flex-col space-y-2">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="w-12 h-12 text-accent"
            >
              <polyline points="4 17 10 11 4 5"></polyline>
              <line x1="12" x2="20" y1="19" y2="19"></line>
            </svg>
            <h3 class="text-lg font-bold">Hands-On Examples</h3>
            <p class="text-sm">
              Put your knowledge to the test with practical exercises that
              demonstrate real-world use cases.
            </p>
          </div>
          <div class="flex flex-col space-y-2">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="w-12 h-12 text-accent"
            >
              <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
              <polyline points="22 4 12 14.01 9 11.01"></polyline>
            </svg>
            <h3 class="text-lg font-bold">Expert Tips</h3>
            <p class="text-sm">
              Discover best practices and shortcuts from experienced Rust
              developers.
            </p>
          </div>
        </div>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <h2>What's in the book</h2>
        <p>TODO: work in progress. Things might change</p>
        <p>
          TODO: list of chapters (mark completed and in progress and expected
          delivery time)
        </p>
        <p>TODO: progress bar</p>
        <ol class="list-disc pl-8 flex flex-col gap-2">
          <li>
            <h3>Chapter 1: Rust &amp; Lambda, a love story.</h3>
            <h4>
              Why this combo makes a ton of sense compared to other
              alternatives.
            </h4>
          </li>
          <li>
            <h3>Chapter 2: an oxidised serverless "Hello, World".</h3>
            <h4>Writing our first Rust-powered Lambda Function.</h4>
          </li>
          <li>
            <h3>Chapter 3: Infrastructure as code with SAM.</h3>
            <h4>
              How to deploy and manage Rust Lambda functions with the Serverless
              Application Model.
            </h4>
          </li>
          <li>
            <h3>Chapter 4: Integrating with external systems.</h3>
            <h4>
              How to make arbitrary HTTP requests or to other AWS services from
              your Lambda functions.
            </h4>
          </li>
          <li>
            <h3>Chapter 5: Handling different kinds of events.</h3>
            <h4>
              How to handle AWS Specific events, custom events and arbitrary
              JSON in a strongly-typed way.
            </h4>
          </li>
          <li>
            <h3>Chapter 6: Handling different kinds of events.</h3>
            <h4>
              How to handle AWS Specific events, custom events and arbitrary
              JSON in a strongly-typed way.
            </h4>
          </li>
          <li>
            <h3>Chapter 7: Different ways of writing Lambda handlers</h3>
            <h4>
              From simple async functions, to custom structs, to implementing
              the Tokio Tower service trait.
            </h4>
          </li>
          <li>
            <h3>Chapter 8: Making the code testable</h3>
            <h4>
              How to structure the code to be able to write good tests for your
              Lambda
            </h4>
          </li>
          <li>
            <h3>Chapter 9: Configuration management and handling secrets</h3>
            <h4>
              Best practices to inject configuration and secrets into your Rust
              Lambda functions.
            </h4>
          </li>
          <li>
            <h3>Chapter 10: Code organisation</h3>
            <h4>
              Best practices on how to organise the code for projects with
              multiple Lambda functions.
            </h4>
          </li>
          <li>
            <h3>Chapter 11: Observing all the things</h3>
            <h4>
              How to make our Rust Lambda functions observable using CloudWatch
              or OpenTelemetry.
            </h4>
          </li>
          <li>
            <h3>Chapter 12: Reaching the speed of light</h3>
            <h4>
              How to benchmark and fine tune your Rust Lambda Functions for
              maximum performance.
            </h4>
          </li>
          <li>
            <h3>Chapter 13: Middlewares</h3>
            <h4>
              How to embrace the middleware pattern to handle cross-cutting
              concerns in an elegant and reusable way.
            </h4>
          </li>
          <li>
            <h3>Chapter 14: Hosting existing HTTP services</h3>
            <h4>
              How to wrap existing HTTP services in a Lambda function to make
              them easily available as serverless functions.
            </h4>
          </li>
          <li>
            <h3>Chapter 15: Lambda extensions</h3>
            <h4>Writing Lambda extensions using Rust.</h4>
          </li>
          <li>
            <h3>Chapter 16: Integrating with GitHub Actions</h3>
            <h4>
              How to configure the integration between AWS and GitHub Actions to
              test, build and deploy your Lambda Functions in an automated
              fashion.
            </h4>
          </li>
          <li>
            <h3>Appendixes</h3>
            <h4>How to use CDK or Terraform as an alternative to SAM.</h4>
          </li>
        </ol>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <h2>Meet the author</h2>
        <p>TODO</p>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <h2>Opinions from the readers</h2>
        <p>TODO</p>

        <div class="grid items-start gap-6 md:gap-12 lg:grid-cols-2 lg:gap-10">
          <div class="flex flex-col gap-2">
            <p class="text-gray-500 dark:text-gray-400">
              “This book is a game-changer for anyone interested in combining
              the power of Rust with the flexibility of serverless computing.
              The author does an excellent job of breaking down complex concepts
              into easy-to-understand examples. Highly recommended!”
            </p>
            <div class="flex items-center space-x-2">
              <div class="font-medium">Alice Johnson</div>
              <div class="text-sm text-gray-500">- @ajohnson</div>
            </div>
          </div>
          <div class="flex flex-col gap-2">
            <p class="text-gray-500 dark:text-gray-400">
              “As a longtime fan of Rust, I was excited to dive into this book,
              and it did not disappoint. The hands-on examples really helped me
              understand how to write efficient and elegant Lambda functions.
              Kudos to the author for creating such a valuable resource!”
            </p>
            <div class="flex items-center space-x-2">
              <div class="font-medium">Bob Lee</div>
              <div class="text-sm text-gray-500">- @bob_lee</div>
            </div>
          </div>
        </div>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <h2>Free chapter</h2>
        <p>TODO</p>
      </section>

      <section class="my-12 px-4 md:px-6 text-foreground">
        <h2>FAQS</h2>
        <p>TODO</p>
        <div class="space-y-4">
          <div class="border-t border-gray-200 dark:border-gray-800">
            <div class="flex items-center justify-between py-4">
              <button
                class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 text-left w-full"
              >
                Is this book suitable for beginners?
              </button>
              <button
                class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 h-10 px-4 py-2 ml-2"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="w-4 h-4"
                >
                  <path d="m6 9 6 6 6-6"></path>
                </svg>
              </button>
            </div>
            <div
              class="grid gap-2 px-4 pb-4 text-sm text-gray-500 border-t dark:text-gray-400"
            >
              Yes, the book is designed to be accessible to readers with basic
              knowledge of Rust. The early chapters provide a gentle
              introduction to Lambda functions and serverless computing.
            </div>
          </div>
          <div class="border-t border-gray-200 dark:border-gray-800">
            <div class="flex items-center justify-between py-4">
              <button
                class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 text-left w-full"
              >
                Are the code examples available for download?
              </button>
              <button
                class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 h-10 px-4 py-2 ml-2"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="w-4 h-4"
                >
                  <path d="m6 9 6 6 6-6"></path>
                </svg>
              </button>
            </div>
            <div
              class="grid gap-2 px-4 pb-4 text-sm text-gray-500 border-t dark:text-gray-400"
            >
              Yes, the book is designed to be accessible to readers with basic
              knowledge of Rust. The early chapters provide a gentle
              introduction to Lambda functions and serverless computing.
            </div>
          </div>
        </div>
      </section>
    </main>

    <footer class="border-t">
      <div
        class="container flex flex-col gap-4 py-8 md:py-12 px-4 text-center md:flex-row md:items-center md:justify-between md:gap-6 md:px-6 lg:gap-10"
      >
        <a class="flex items-center space-x-2 text-2xl font-bold" href="/">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="w-6 h-6"
          >
            <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
            <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
          </svg>
          Rust Lambdas
        </a>
        <nav
          class="flex items-center justify-center space-x-4 text-sm font-medium"
        >
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#features"
          >
            Features
          </a>
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#author"
          >
            Author
          </a>
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#testimonials"
          >
            Testimonials
          </a>
          <a
            class="text-gray-900/60 hover:underline dark:text-gray-50/60 dark:hover:underline"
            href="#faq"
          >
            FAQ
          </a>
        </nav>
        <div class="flex items-center space-x-4">
          <a
            class="inline-flex h-10 items-center justify-center rounded-md border border-gray-200 border-gray-200 bg-white px-8 text-sm font-medium shadow-sm transition-colors hover:bg-gray-100 hover:text-gray-900 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-800 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus-visible:ring-gray-300"
            href="#terms"
          >
            Terms &amp; Conditions
          </a>
          <a
            class="inline-flex h-10 items-center justify-center rounded-md border border-gray-200 border-gray-200 bg-white px-8 text-sm font-medium shadow-sm transition-colors hover:bg-gray-100 hover:text-gray-900 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-800 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus-visible:ring-gray-300"
            href="#privacy"
          >
            Privacy Policy
          </a>
        </div>
      </div>
    </footer>
  </div>
</Layout>
